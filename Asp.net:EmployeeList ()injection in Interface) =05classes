Emplooyee:
-----------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace application.Asp.net_mvc_02.Models
{
    public class Employee
    {
        public int Id { get; set; } 
        public string Name {get;set;}
        public string Email { get; set; }
        public string Department { get; set; }
    }
}

-------------------------------------------------------------------------------------------------------------------------------------
Mockclass:
------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace application.Asp.net_mvc_02.Models
{
    public class MockEmployeeRepository : IEmployeeRepository //Diffency Injection
    {
        private List<Employee> _employeesList;

        public MockEmployeeRepository()
        {
            _employeesList = new List<Employee>()
            {
                new Employee(){Id=1,Name ="Pradheepan", Department ="Informatic",Email="Pradheepan@gmail.com", },
                new Employee(){Id=2,Name ="Kanesh", Department ="Finance",Email="Kanesh@gmail.com", },
                new Employee(){Id=3,Name ="Thavam", Department ="Labour",Email="Thavam@gmail.com", },
                new Employee(){Id=4,Name ="Murukan", Department ="Management",Email="Murikan@gmail.com", },
            };
        }
        public Employee GetEmployee( int Id)
        {
            return _employeesList.FirstOrDefault(e =>  e.Id  == e.Id);
        }
    }
}
-------------------------------------------------------------------------------------------------------------------------------------
InterfaceReposity
-------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace application.Asp.net_mvc_02.Models
{
   public interface IEmployeeRepository
    {
        Employee GetEmployee(int Id);   
    }
}
--------------------------------------------------------------------------------------------------------------------------------------
HomeController:
-----------------------
using application.Asp.net_mvc_02.Models;
using Microsoft.AspNetCore.Mvc;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace application.Asp.net_mvc_02.Controllers
{
    public class HomeController: Controller
    {
        private IEmployeeRepository _employeeRepository;

        public HomeController(IEmployeeRepository employeeRepository)
        {
            _employeeRepository = employeeRepository;
        }
        public string Index()
        {
            return _employeeRepository.GetEmployee(2).Name;
        }
    }
}
-------------------------------------------------------------------------------------------------------------------------------------
Startup
------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Hosting;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Logging;
using Microsoft.Extensions.Options;
using application.Asp.net_mvc_02.Models;

namespace application.Asp.net_mvc_02
{
    public class Startup
    {
        private  IConfiguration _config;

        public Startup(IConfiguration config)
        {
            _config = config;
        }

  

        // This method gets called by the runtime. Use this method to add services to the container.
        public void ConfigureServices(IServiceCollection services)
        {
            services.AddMvc();
            services.AddSingleton<IEmployeeRepository, MockEmployeeRepository>();
        }

        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
        public void Configure(IApplicationBuilder app, IHostingEnvironment env)   
        {
            if (env.IsDevelopment())
            {
                app.UseDeveloperExceptionPage();
            }
            app.UseStaticFiles();
            app.UseMvcWithDefaultRoute();

            app.Run(async (context) => {
                await context.Response.WriteAsync("This Commen Testing Form Startup!!");
            });
        }
    }
}

