using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Hosting;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Logging;
using Microsoft.Extensions.Options;

namespace Project_Asp.net_04
{
    public class Startup
    {
        public Startup(IConfiguration configuration)
        {
            Configuration = configuration;
        }

        public IConfiguration Configuration { get; }

        // This method gets called by the runtime. Use this method to add services to the container.
        public void ConfigureServices(IServiceCollection services)
        {
            services.AddMvc().SetCompatibilityVersion(CompatibilityVersion.Version_2_1);
        }

        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
        public void Configure(IApplicationBuilder app, IHostingEnvironment env, ILogger<Startup>logger)
        {
            if (env.IsDevelopment())
            {
                app.UseDeveloperExceptionPage();
            }

            app.Use(async (context, next) =>
            {
                logger.LogInformation("This magge Coming Form 1st ILogger!");
                await next();
                logger.LogInformation("This magge Coming Form 2nd ILogger!");
            });
            app.Use(async (context, next) =>
            {
                logger.LogInformation("This magge outgoin Form 3st ILogger!");
                await next();
                logger.LogInformation("This magge  outging Form 4nd ILogger!");
            });

            app.Run(async (context) =>
            {
                await context.Response.WriteAsync("Hallo is Form 2st  Middelware Testing");
                logger.LogInformation("This magge Runningobject  Form 5nd ILogger!");
            });
        }
    }
}
