Details.cshtml
--------------
@model HomeDetailsViewModel

@{
    ViewBag.Tiile = "Employee List";
}

<h3>@Model.PageTitle</h3>
<div class="row justify-content-center m-3>
    <div class="col-sm-8">
        <div class="card">
            <div class="card-header">
                <h1>@Model.Employee.FirstName</h1>
            </div>
            <div class="card-body text-center">
                <img class="card-img-top" src="~/images/beach.jpg" />
                <h4>Employee ID : @Model.Employee.Id</h4>
                <h4>Email : @Model.Employee.Email</h4>
                <h4>Department : @Model.Employee.Department</h4>
            </div>
            <div class="card-footer text-center">
                <a asp-controller="home" asp-action="index" class="btn btn-outline-primary">Back</a>
                <a href="#" class="btn btn-outline-primary">Edit</a>
                <a href="#" class="btn btn-danger">Delete</a>
            </div>
        </div>

    </div>

    incex.cshtml
    ------------
    @model IEnumerable<Employee>

@{ 
    ViewBag.Tiile = "Employee Details";
}
<div class="card-deck">

    @foreach (var employee in Model)
    {
        <div class="card  m-3">
            <div class="card-header">
                <h3>@employee.FirstName</h3>
            </div>
            <img class="card-img-top" src="~/images/man.jpg"
                 asp-append-version="true" />
            <div class="card-footer text-center">
                <a asp-controller="home" asp-action="details" asp-route-id="@employee.Id" class="btn btn-primary">View</a>
                <a href="#" class="btn btn-primary">Edit</a>
                <a href="#" class="btn btn-primary">Delete</a>
            </div>

        </div>

    }
</div>

</div>
_Layout.cshtml
--------------
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <link href="~/lib/bootstrap/css/bootstrap.css" rel="stylesheet" />
    <title>@ViewBag.Title</title>
</head>
<body>
    <div class="container">
        @RenderBody()
    </div>
    @if (IsSectionDefined("scripts"))
    {
        @RenderSection("scripts", required: true)
    }
 

</body>
</html>


HomeController
---------------
using EmployeeManagement_000.Model;
using EmployeeManagement_000.ViewModels;
using Microsoft.AspNetCore.Mvc;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace EmployeeManagement_000.controllers
{
    public class  HomeController: Controller
    {
        private readonly IEmployeeRepository _employeeRepository;

        public HomeController(IEmployeeRepository employeeRepository)
        {
            _employeeRepository = employeeRepository;
        }
        public ViewResult Index()
        {
            var model =_employeeRepository.GetAllEmployee();
            return View(model);
        }

        public ViewResult Details(int id)
        {
            HomeDetailsViewModel homeDetailsViewModel = new HomeDetailsViewModel()
            {
                Employee = _employeeRepository.GetEmployee(1),
                PageTitle = "Employee Details"
            };
            return View(homeDetailsViewModel);
        }
    }
}


Starup
-------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using EmployeeManagement_000.Model;
using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Hosting;
using Microsoft.AspNetCore.Http;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;

namespace EmployeeManagement_000
{
    public class Startup
    {
        private IConfiguration _config;

        public Startup (IConfiguration config)
        {
            _config = config;
        }
        // This method gets called by the runtime. Use this method to add services to the container.
        // For more information on how to configure your application, visit https://go.microsoft.com/fwlink/?LinkID=398940
        public void ConfigureServices(IServiceCollection services)
        {
            services.AddMvc().AddXmlSerializerFormatters();
            services.AddSingleton<IEmployeeRepository, ModelEmployeeRepository>();
        }
        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
        public void Configure(IApplicationBuilder app, IHostingEnvironment env)
        {
            if (env.IsDevelopment())
            {
                app.UseDeveloperExceptionPage();
            }

            app.UseStaticFiles();
            //app.UseMvcWithDefaultRoute();
           
            app.UseMvc(routes =>
            {
                routes.MapRoute("default", "{controller=Home}/{action=Index}/{id?}");
            });




        }
    }
}

index.cshtml
-------------
@model IEnumerable<Employee>

@{ 
    ViewBag.Tiile = "Employee Details";
}
<div class="card-deck">

    @foreach (var employee in Model)
    {
        <div class="card  m-3">
            <div class="card-header">
                <h3>@employee.FirstName</h3>
            </div>
            <img class="card-img-top" src="~/images/imagesshadow.png"
                 asp-append-version="true" />
            <div class="card-footer text-center">
                <a asp-controller="home" asp-action="details" asp-route-id="@employee.Id" class="btn btn-primary">View</a>
                <a href="#" class="btn btn-primary">Edit</a>
                <a href="#" class="btn btn-primary">Delete</a>
            </div>

        </div>

    }
</div>


Details.cshtml
---------------

@model HomeDetailsViewModel

@{
    ViewBag.Tiile = "Employee List";
}

<h3>@Model.PageTitle</h3>
<div class="row justify-content-center m-3>
    <div class="col-sm-8">
        <div class="card">
            <div class="card-header">
                <h3>@Model.Employee.FirstName</h3>
            </div>
            <div class="card-body text-center">
                <img class="card-img-top" src="~/images/studen.png" />
                <h4>Employee ID : @Model.Employee.Id</h4>
                <h4>Email : @Model.Employee.Email</h4>
                <h4>TeleNo : @Model.Employee.TeleNo</h4>
                <h4>Department : @Model.Employee.Department</h4>
            </div>
            <div class="card-footer text-center">
                <a asp-controller="home" asp-action="index" class="btn btn-outline-primary">Back</a>
                <a href="#" class="btn btn-outline-primary">Edit</a>
                <a href="#" class="btn btn-danger">Delete</a>
            </div>
        </div>

    </div>

</div>

_Layout.cshtml
--------------
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <environment>
         <link href="~/lib/bootstrap/css/bootstrap.css" rel="stylesheet" />
    </environment>
    <environment exclude="Development">
        <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css"
              integrity="sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk"
              crossorigin="anonymous"
              asp-fallback-href="~/lib/bootstrap/css/bootstrap.min.css"
             asp-fallback-test-property="position"
             asp-fallback-test-value="absolute"
             asp-suppress-fallback-integrity="true" />
    </environment>
    <link href="~/css/style.css" rel="stylesheet" />
    <title>@ViewBag.Title</title>
</head>
<body>
    <div class="container">
        @RenderBody()
    </div>
    @if (IsSectionDefined("scripts"))
    {
        @RenderSection("scripts", required: true)
    }
 

</body>
</html>


_Layout.cshtml
---------------
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <environment>
        <link href="~/lib/bootstrap/css/bootstrap.css" rel="stylesheet" />
        <script src="~/lib/jquery/jquery.js"></script>
        <script src="~/lib/bootstrap/js/bootstrap.js"></script>
    </environment>
    <environment exclude="Development">
        <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css"
              integrity="sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk"
              crossorigin="anonymous"
              asp-fallback-href="~/lib/bootstrap/css/bootstrap.min.css"
             asp-fallback-test-property="position"
             asp-fallback-test-value="absolute"
             asp-suppress-fallback-integrity="true" />
    </environment>
    <link href="~/css/style.css" rel="stylesheet" />
    <title>@ViewBag.Title</title>
</head>
<body>
    <div class="container">
        <nav class="navbar navbar-expand-sm bg-dark navbar-dark">
            <a class="navbar-brand" asp-action="index" asp-controller="home">
                <img src="~/Images/stage-1.png" height="30" width="30"/>
            </a> 
            <button type="button" class="navbar-toggler" data-toggle="collapse" data-target="#collapsibleNavbar">
                <span class="navbar-toggler-icon"></span>

            </button>
            <div class="collapse  navbar-collapse" id="collapsibleNavbar">
                <ul class="navbar-nav">
                    <li class="nav-item">
                        <a asp-action="index" asp-controller="home" class="nav-link">List</a>
                    </li>
                    <li class="nav-item">
                        <a asp-action="Create" asp-controller="home" class="nav-link">Create</a>
                    </li>
                </ul>
            </div>
        </nav>
        <div >
            @RenderBody()
        </div>
        @if (IsSectionDefined("scripts"))
        {
            @RenderSection("scripts", required: true)
        }
    </div>

</body>
</html>

