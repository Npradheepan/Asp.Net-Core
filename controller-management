using ManagementOfEmployees.Models;
using ManagementOfEmployees.ViewModels;
using Microsoft.AspNetCore.Hosting;
using Microsoft.AspNetCore.Mvc;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;

namespace ManagementOfEmployees.Controllers
{
    public class HomeController: Controller
    {
        private readonly IEmployeeRepository _employeeRepository;
        private readonly IHostingEnvironment hostingEnvironment;

        public HomeController(IEmployeeRepository employeeRepository, IHostingEnvironment hostingEnvironment)
        {
            _employeeRepository = employeeRepository;
            this.hostingEnvironment = hostingEnvironment;
        }

        //----------Index Controller Method-----------------//
        public ViewResult Index ()
        {
            var model = _employeeRepository.GetAllEmployee();
            return View(model);
        }

        //----------------Details Controller Method---------//
        public ViewResult Details(int? id)
        {
            HomeDetailsViewModel homeDetailsViewModel = new HomeDetailsViewModel()
            {
                 Employee  = _employeeRepository.GetEmployee(id ?? 1),
                PageTitle = "Employee Details"
             };
            return View(homeDetailsViewModel);
        }

        //Create Form Controller Method
        //Http GET Method
        [HttpGet]
        public ViewResult Create()
        {
            return View();
        }
        //-------------------------Edit-Get Method--------------//
        [HttpGet]
        public ViewResult Edit(int id)
        {
            Employee employee = _employeeRepository.GetEmployee(id);
            EmployeeEditViewModel employeeEditViewModel = new EmployeeEditViewModel
            {
                Id = employee.Id,
                Name = employee.Name,
                Email = employee.Email,
                Department = employee.Department,
                ExistingPhotopath = employee.Photopath,

            };
            return View(employeeEditViewModel);
        }
        //-------------------------Edit-post- Method--------------//
        [HttpPost]
        public IActionResult Edit (EmployeeEditViewModel model)
        {
            if (ModelState.IsValid)
            {
                Employee employee = _employeeRepository.GetEmployee(model.Id);
                employee.Name = model.Name;
                employee.Email = model.Email;
                employee.Department = model.Department;
                if (model.Photo !=null)
                {
                    if(model.ExistingPhotopath != null)
                    {
                       string filePath = Path.Combine(hostingEnvironment.WebRootPath, "images", model.ExistingPhotopath);
                        System.IO.File.Delete(filePath);
                    }
                   employee.Photopath= ProcessUploadedFile(model);
                }
                _employeeRepository.Update(employee);
                return RedirectToAction("index");
            }
            return View();
        }
        //--------ProcessUploadedFile---------//
        private string ProcessUploadedFile(EmployeeCreateViewModel model)
        {
            string uniqueFileName = null;
            if (model.Photo != null)
            {
                string uploadsFolder = Path.Combine(hostingEnvironment.WebRootPath, "images");
                uniqueFileName = Guid.NewGuid().ToString() + "_" + model.Photo.FileName;
                string filePath = Path.Combine(uploadsFolder, uniqueFileName);
                using(var fileStream = new FileStream(filePath, FileMode.Create))
                {
                    model.Photo.CopyTo(fileStream);
                }
            }
            return uniqueFileName;
        }

        //---------------Http Create-POST Method--------------//   
        [HttpPost]
        public IActionResult Create(EmployeeCreateViewModel model)
        {
            if (ModelState.IsValid)
            {
                string uniqueFileName = ProcessUploadedFile(model);
                Employee newEmployee = new Employee
                {
                    Name = model.Name,
                    Email = model.Email,
                    Department = model.Department,
                    // Store the file name in PhotoPath property of the employee object
                    // which gets saved to the Employees database table
                    Photopath = uniqueFileName
                };

                _employeeRepository.Add(newEmployee);
                return RedirectToAction("details", new { id = newEmployee.Id }); 
            }
            return View();
        }
    }
}
