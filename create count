 create 
 -----------
 @model Employee
@inject IEmployeeRepository _empRepository


@{
    ViewBag.Title = "Create Employee";
  }


<form asp-controller="Home" asp-action="create" method="post" class="mt-3">

    <div class="form-group  row">
        <label asp-for="FirstName" class="col-sm-2   col-form-label">FirstName</label>
        <div class="col-sm-10">
            <input asp-for="FirstName" class="form-control" placeholder="FirstName" />
            <span asp-validation-for="FirstName" class="text-danger"></span>
        </div>
    </div>

    <div class="form-group  row">
        <label asp-for="LastName" class="col-sm-2   col-form-label">LastName</label>
        <div class="col-sm-10">
            <input asp-for="LastName" class="form-control" placeholder="LastName" />
            <span asp-validation-for="LastName" class="text-danger"></span>
        </div>
    </div>

    <div class="form-group  row">
        <label asp-for="Email" class="col-sm-2   col-form-label">Email</label>
        <div class="col-sm-10">
            <input asp-for="Email" class="form-control" placeholder="Email" />
            <span asp-validation-for="Email" class="text-danger"></span>
        </div>
    </div>

    <div class="form-group  row">
        <label asp-for="TeleNo" class="col-sm-2   col-form-label">TeleNo</label>
        <div class="col-sm-10">
            <input asp-for="TeleNo" class="form-control" placeholder="TeleNo" />
            <span asp-validation-for="TeleNo" class="text-danger"></span>
        </div>
    </div>

    <div class="form-group  row">
        <label asp-for="Department" class="col-sm-2   col-form-label">Department</label>
        <div class="col-sm-10">
            <select asp-for="Department" asp-items="Html.GetEnumSelectList<Dept>()">
                <option value="">
                    Please Select The Department!
                </option>
            </select>
            <span asp-validation-for="Department" class="text-danger"></span>
        </div>
    </div>
    <div asp-validation-summary="All" class="text-danger"></div>
    <div class="form-group row">
        <div class="col-sm-10">
            <button type="submit" class="btn btn-primary">Create</button>
        </div>
    </div>

    <div class="form-group row">
        <div class="col-sm-10">
          Total Epmployee Count = @_empRepository.GetAllEmployee().Count()
        </div>
    </div>
</form>
IEmployeeRepositiry
--------------------
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Threading.Tasks;

namespace EmployeeManagement_000.Model
{
    public class Employee
    {
        public int Id { get; set; }
        [Required]
        [MaxLength(100, ErrorMessage = "Large Latter")]
        public string FirstName { get; set;}
        [Required]
        [MaxLength(100, ErrorMessage = "Large Latter")]
        public string LastName { get; set;}
        [Required]
        public Int64 TeleNo { get; set;}
        [Required]
        [RegularExpression(@"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$",  ErrorMessage = "Invalid Email Format")]
        [Display(Name = "Office Mail")]
        public string Email { get; set;}
        [Required]
        public Dept? Department { get; set;}
    }
}

Home controller
-----------------
<using EmployeeManagement_000.Model;
using EmployeeManagement_000.ViewModels;
using Microsoft.AspNetCore.Mvc;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace EmployeeManagement_000.controllers
{
    public class HomeController : Controller
    {
        private readonly IEmployeeRepository _employeeRepository;

        public HomeController(IEmployeeRepository employeeRepository)
        {
            _employeeRepository = employeeRepository;
        }
        public ViewResult Index()
        {
            var model = _employeeRepository.GetAllEmployee();
            return View(model);
        }

        public ViewResult Details(int? id)
        {
            HomeDetailsViewModel homeDetailsViewModel = new HomeDetailsViewModel()
            {
                Employee = _employeeRepository.GetEmployee(id ?? 1),
                PageTitle = "Employee Details"
            };
            return View(homeDetailsViewModel);
        }
        [HttpGet]
        public ViewResult Create()
        {
            return View();
        }
        [HttpPost]
        public IActionResult Create(Employee employee)
        {
            if (ModelState.IsValid)
            {
                Employee newEmployee = _employeeRepository.Add(employee);
                //return RedirectToAction("details", new { id = newEmployee });
            }
            return View();
          
        }
    }
}
